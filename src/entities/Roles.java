package entities;
// Generated Nov 19, 2015 12:30:29 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Roles generated by hbm2java
 */
@Entity
@Table(name="Roles"
    ,schema="dbo"
    ,catalog="Hotel"
)
public class Roles  implements java.io.Serializable {


     private Integer roleId;
     private String roleName;
     private Boolean isActive;
     private Set<RoleFunction> roleFunctions = new HashSet<RoleFunction>(0);
     private Set<Accounts> accountses = new HashSet<Accounts>(0);

    public Roles() {
    }

    public Roles(String roleName, Boolean isActive, Set<RoleFunction> roleFunctions, Set<Accounts> accountses) {
       this.roleName = roleName;
       this.isActive = isActive;
       this.roleFunctions = roleFunctions;
       this.accountses = accountses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="RoleID", unique=true, nullable=false)
    public Integer getRoleId() {
        return this.roleId;
    }
    
    public void setRoleId(Integer roleId) {
        this.roleId = roleId;
    }

    
    @Column(name="RoleName")
    public String getRoleName() {
        return this.roleName;
    }
    
    public void setRoleName(String roleName) {
        this.roleName = roleName;
    }

    
    @Column(name="isActive")
    public Boolean getIsActive() {
        return this.isActive;
    }
    
    public void setIsActive(Boolean isActive) {
        this.isActive = isActive;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="roles")
    public Set<RoleFunction> getRoleFunctions() {
        return this.roleFunctions;
    }
    
    public void setRoleFunctions(Set<RoleFunction> roleFunctions) {
        this.roleFunctions = roleFunctions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="roles")
    public Set<Accounts> getAccountses() {
        return this.accountses;
    }
    
    public void setAccountses(Set<Accounts> accountses) {
        this.accountses = accountses;
    }




}


