/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import entities.Suppliers;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import models.SupplierEntityManager;
import models.SupplierEntityManager;

/**
 *
 * @author ADMIN
 */
public class SupplierForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form RoleFormDB
     */
    static SupplierForm instance = null;
    SupplierEntityManager cateModel = new SupplierEntityManager();

    public SupplierForm() {
        initComponents();
        setIcon();
        loadSupplierListToTable();
        lblId.setVisible(false);
        txtId.setVisible(false);
        tblCategory.getColumn("ID").setMinWidth(0);
        tblCategory.getColumn("ID").setMaxWidth(0);
        //Update form information when new category's selected
        tblCategory.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                int selectedIndex = tblCategory.getSelectedRow();
                if (selectedIndex != -1) {
                    txtId.setText(tblCategory.getValueAt(selectedIndex, 0).toString());
                    txtName.setText(tblCategory.getValueAt(selectedIndex, 1).toString());
                }
            }
        });
        //centerTextCell(tblSupplier);
    }

    public static SupplierForm getIns() {
        if (instance == null) {
            instance = new SupplierForm();
        }
        return instance;

    }

    void centerTextCell(JTable table) {
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        for (int i = 0; i < table.getColumnCount(); i++) {
            table.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
    }

    public void setIcon() {
        this.setFrameIcon(new ImageIcon(getClass().getResource("/image/logoTitle.png")));
    }

    void loadSupplierListToTable() {
        DefaultTableModel dtm = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int i, int i1) {
                return false; //To change body of generated methods, choose Tools | Templates.
            }
        };

        dtm.addColumn("ID");
        dtm.addColumn("Name");

        for (Suppliers ca : cateModel.getAll()) {
            dtm.addRow(new Object[]{ca.getSupplierId(), ca.getSupplierName()});
        }

        tblCategory.setModel(dtm);
        tblCategory.getColumn("ID").setMinWidth(0);
        tblCategory.getColumn("ID").setMaxWidth(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlInput = new javax.swing.JPanel();
        pnltxt = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        bnlButton = new javax.swing.JPanel();
        btnUpdate = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btncreate = new javax.swing.JButton();
        pnlOutput = new javax.swing.JPanel();
        scrCategory = new javax.swing.JScrollPane();
        tblCategory = new javax.swing.JTable();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(175, 175, 175), 4));
        setClosable(true);
        setTitle("Category Manager");
        setMinimumSize(new java.awt.Dimension(0, 0));
        setPreferredSize(new java.awt.Dimension(0, 0));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        pnlInput.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Suppliers Control"));
        pnlInput.setToolTipText("");
        pnlInput.setMinimumSize(new java.awt.Dimension(402, 479));
        pnlInput.setPreferredSize(new java.awt.Dimension(402, 479));
        pnlInput.setLayout(new java.awt.GridBagLayout());

        pnltxt.setLayout(new java.awt.GridBagLayout());

        lblName.setText("Name: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        pnltxt.add(lblName, gridBagConstraints);

        txtName.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        pnltxt.add(txtName, gridBagConstraints);

        lblId.setText("Id: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        pnltxt.add(lblId, gridBagConstraints);

        txtId.setEnabled(false);
        txtId.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnltxt.add(txtId, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        pnlInput.add(pnltxt, gridBagConstraints);

        bnlButton.setLayout(new java.awt.GridBagLayout());

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edit.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setMaximumSize(new java.awt.Dimension(100, 32));
        btnUpdate.setMinimumSize(new java.awt.Dimension(100, 32));
        btnUpdate.setPreferredSize(new java.awt.Dimension(100, 32));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        bnlButton.add(btnUpdate, gridBagConstraints);

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/delete.png"))); // NOI18N
        btnReset.setText("Delete");
        btnReset.setMaximumSize(new java.awt.Dimension(100, 32));
        btnReset.setMinimumSize(new java.awt.Dimension(100, 32));
        btnReset.setPreferredSize(new java.awt.Dimension(100, 32));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        bnlButton.add(btnReset, gridBagConstraints);

        btncreate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.png"))); // NOI18N
        btncreate.setText("Create");
        btncreate.setMaximumSize(new java.awt.Dimension(100, 32));
        btncreate.setMinimumSize(new java.awt.Dimension(100, 32));
        btncreate.setPreferredSize(new java.awt.Dimension(100, 32));
        btncreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncreateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        bnlButton.add(btncreate, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        pnlInput.add(bnlButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        getContentPane().add(pnlInput, gridBagConstraints);

        pnlOutput.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Suppliers Data"));
        pnlOutput.setMinimumSize(new java.awt.Dimension(472, 477));
        pnlOutput.setPreferredSize(new java.awt.Dimension(472, 477));
        pnlOutput.setLayout(new java.awt.GridBagLayout());

        scrCategory.setPreferredSize(new java.awt.Dimension(400, 422));

        tblCategory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name"
            }
        ));
        tblCategory.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrCategory.setViewportView(tblCategory);

        pnlOutput.add(scrCategory, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 3, 0, 6);
        getContentPane().add(pnlOutput, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btncreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncreateActionPerformed
        // TODO add your handling code here:
        txtId.setText(" ");
        //check empty field
        if (txtName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Supplier name cannot be empty!","Error",0);
            return;
        }

        Suppliers category = new Suppliers();
        category.setSupplierName(txtName.getText());
        category.setIsActive(true);

        if (!cateModel.addNew(category)) {
            JOptionPane.showMessageDialog(null, "Failed to add new Supplier!","Error",0);
        } else {
            JOptionPane.showMessageDialog(null, "Supplier added successfully!","Success",1);
            loadSupplierListToTable();
        }

    }//GEN-LAST:event_btncreateActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
         //check empty field
        if (txtName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Supplier name cannot be empty!","Error",0);
            return;
        }

        Suppliers category = new Suppliers();
        category.setSupplierId(Integer.valueOf(txtId.getText()));
        category.setSupplierName(txtName.getText());
        category.setIsActive(true);

        if (!cateModel.edit(category)) {
            JOptionPane.showMessageDialog(null, "Failed to update Supplier!","Error",0);
        } else {
            JOptionPane.showMessageDialog(null, "Supplier updated successfully!","Success",1);
            txtId.setText(" ");
            loadSupplierListToTable();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        Suppliers category = new Suppliers();
        category.setSupplierId(Integer.valueOf(txtId.getText()));
        category.setSupplierName(txtName.getText());

        cateModel.delete(category);
        loadSupplierListToTable();
        JOptionPane.showMessageDialog(null, "Supplier deleted successfully!","Success",1);
        txtId.setText(" ");
    }//GEN-LAST:event_btnResetActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bnlButton;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btncreate;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblName;
    private javax.swing.JPanel pnlInput;
    private javax.swing.JPanel pnlOutput;
    private javax.swing.JPanel pnltxt;
    private javax.swing.JScrollPane scrCategory;
    private javax.swing.JTable tblCategory;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
